"""
main.py - –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å Discord –±–æ—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π LLM
"""

import asyncio
import logging
from datetime import datetime, timezone
from typing import Dict

import discord
from discord import app_commands

from config import BotConfig, setup_logging, MessageUtils
from ai_handler import AIHandler, ConversationManager


class DiscordLLMBot(discord.Client):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å Discord –±–æ—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π LLM –∏ slash –∫–æ–º–∞–Ω–¥.
    """

    def __init__(self, config: BotConfig, intents: discord.Intents):
        super().__init__(intents=intents)
        self.config = config
        self.ai_handler = AIHandler(config)
        self.conversation_manager: Optional[ConversationManager] = None
        self.typing_tasks: Dict[int, asyncio.Task] = {}
        self.logger = logging.getLogger(self.__class__.__name__)
        self.utils = MessageUtils()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ä–µ–≤–∞ –∫–æ–º–∞–Ω–¥
        self.tree = app_commands.CommandTree(self)

    async def setup_hook(self) -> None:
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è."""
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AI handler
        await self.ai_handler.initialize()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–æ–≤ (—Ç—Ä–µ–±—É–µ—Ç self.user)
        self.conversation_manager = ConversationManager(self.config, self.user)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º slash –∫–æ–º–∞–Ω–¥—ã
        await self._register_commands()

        self.logger.info("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

    async def _register_commands(self) -> None:
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è slash –∫–æ–º–∞–Ω–¥."""

        @self.tree.command(name="ask", description="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞—á–∞—Ç—å –±–µ—Å–µ–¥—É —Å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º")
        @app_commands.describe(
            message="–í–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ò–ò",
            include_history="–£—á–∏—Ç—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: –¥–∞)"
        )
        async def ask_command(
                interaction: discord.Interaction,
                message: str,
                include_history: bool = True
        ) -> None:
            await self._handle_ai_interaction(interaction, message, include_history)

        @self.tree.command(name="help", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞")
        async def help_command(interaction: discord.Interaction) -> None:
            await self._handle_help_command(interaction)

        @self.tree.command(name="status", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        async def status_command(interaction: discord.Interaction) -> None:
            await self._handle_status_command(interaction)

    async def _handle_help_command(self, interaction: discord.Interaction) -> None:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã help."""
        embed = discord.Embed(
            title="ü§ñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞",
            description="–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:",
            color=discord.Color.green(),
            timestamp=datetime.now(timezone.utc)
        )

        commands_info = [
            ("üìù `/ask <—Å–æ–æ–±—â–µ–Ω–∏–µ>`", "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞—á–∞—Ç—å –±–µ—Å–µ–¥—É —Å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º"),
            ("üìä `/status`", "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"),
            ("‚ùì `/help`", "–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
        ]

        for name, description in commands_info:
            embed.add_field(name=name, value=description, inline=False)

        embed.add_field(
            name="üìå –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ",
            value="–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–µ–Ω—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ (@–±–æ—Ç), –∏ —è –æ—Ç–≤–µ—á—É!",
            inline=False
        )

        await interaction.response.send_message(embed=embed, ephemeral=True)

    async def _handle_status_command(self, interaction: discord.Interaction) -> None:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã status."""
        embed = discord.Embed(
            title="üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞",
            color=discord.Color.blue(),
            timestamp=datetime.now(timezone.utc)
        )

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
        embed.add_field(
            name="ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            value=f"**–ú–æ–¥–µ–ª—å:** {self.config.llm_model}\n"
                  f"**–°–µ—Ä–≤–µ—Ä–æ–≤:** {len(self.guilds)}\n"
                  f"**–ü–∏–Ω–≥:** {round(self.latency * 1000)}ms",
            inline=False
        )

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        embed.add_field(
            name="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
            value=f"**–ò—Å—Ç–æ—Ä–∏—è:** {self.config.max_history_messages} —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                  f"**Max —Ç–æ–∫–µ–Ω–æ–≤:** {self.config.max_tokens}\n"
                  f"**–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** {self.config.temperature}",
            inline=False
        )

        # –°—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–∏
        session_status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if (self.ai_handler.http_session and
                                          not self.ai_handler.http_session.closed) else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
        embed.add_field(
            name="üåê HTTP —Å–µ—Å—Å–∏—è",
            value=session_status,
            inline=False
        )

        await interaction.response.send_message(embed=embed, ephemeral=True)

    async def _handle_ai_interaction(
            self,
            interaction: discord.Interaction,
            user_message: str,
            include_history: bool = True
    ) -> None:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ò–ò —á–µ—Ä–µ–∑ slash –∫–æ–º–∞–Ω–¥—ã."""
        self.logger.info(
            f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç {interaction.user} –≤ –∫–∞–Ω–∞–ª–µ {interaction.channel.name}: "
            f"'{user_message[:50]}...'"
        )

        # –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ç–∞–π–º–∞—É—Ç–∞
        try:
            await interaction.response.defer()
        except discord.NotFound:
            self.logger.warning("Interaction —É–∂–µ –∏—Å—Ç–µ–∫, –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é")
            try:
                await interaction.followup.send("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...")
            except Exception:
                self.logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
                return

        try:
            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∏
            typing_task = asyncio.create_task(self._typing_for_interaction(interaction))

            try:
                # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
                if include_history:
                    history = await self.conversation_manager.get_formatted_history_from_channel(
                        interaction.channel,
                        user_message,
                        interaction.user
                    )
                else:
                    history = await self.conversation_manager.get_simple_history(
                        user_message,
                        interaction.user
                    )

                # –ó–∞–ø—Ä–æ—Å –∫ LLM
                ai_response = await self.ai_handler.query_ai(history)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç (—Ä–∞–∑–±–∏–≤–∞–µ–º –µ—Å–ª–∏ –¥–ª–∏–Ω–Ω—ã–π)
                chunks = self.utils.split_message(ai_response)

                for i, chunk in enumerate(chunks):
                    if i == 0:
                        try:
                            await interaction.followup.send(chunk)
                        except discord.NotFound:
                            # –ï—Å–ª–∏ interaction –∏—Å—á–µ–∑, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª
                            await interaction.channel.send(f"{interaction.user.mention} {chunk}")
                    else:
                        try:
                            await interaction.followup.send(chunk)
                        except discord.NotFound:
                            await interaction.channel.send(chunk)

                self.logger.info(f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {interaction.user}")

            finally:
                # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
                typing_task.cancel()
                try:
                    await typing_task
                except asyncio.CancelledError:
                    pass

        except Exception as e:
            self.logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç {interaction.user}")
            try:
                error_embed = discord.Embed(
                    title="‚ùå –û—à–∏–±–∫–∞",
                    description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    color=discord.Color.red()
                )
                try:
                    await interaction.followup.send(embed=error_embed)
                except discord.NotFound:
                    await interaction.channel.send(
                        f"{interaction.user.mention} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
            except Exception:
                self.logger.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")

    async def on_ready(self) -> None:
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Discord."""
        self.logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥: {self.user} (ID: {self.user.id})")
        self.logger.info(f"–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –Ω–∞ {len(self.guilds)} —Å–µ—Ä–≤–µ—Ä–µ(–∞—Ö)")
        self.logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –º–æ–¥–µ–ª—å LLM: {self.config.llm_model}")

        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
        try:
            synced = await self.tree.sync()
            self.logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} slash –∫–æ–º–∞–Ω–¥")
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

    async def on_app_command_error(
            self,
            interaction: discord.Interaction,
            error: app_commands.AppCommandError
    ) -> None:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ slash –∫–æ–º–∞–Ω–¥–∞—Ö."""
        self.logger.error(
            f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ {interaction.command.name if interaction.command else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π'}: {error}")

        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        error_message = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã."

        if isinstance(error, app_commands.CommandOnCooldown):
            error_message = f"‚è∞ –ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ {error.retry_after:.1f} —Å–µ–∫—É–Ω–¥."
        elif isinstance(error, app_commands.MissingPermissions):
            error_message = "üîí –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."
        elif isinstance(error, app_commands.BotMissingPermissions):
            error_message = "ü§ñ –£ –±–æ—Ç–∞ –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã."

        try:
            if not interaction.response.is_done():
                await interaction.response.send_message(error_message, ephemeral=True)
            else:
                await interaction.followup.send(error_message, ephemeral=True)
        except Exception:
            # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç–≤–µ—Ç–∏—Ç—å —á–µ—Ä–µ–∑ interaction, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª
            try:
                await interaction.channel.send(f"{interaction.user.mention} {error_message}")
            except Exception:
                self.logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")

    async def on_disconnect(self) -> None:
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –±–æ—Ç–∞."""
        self.logger.warning("–ë–æ—Ç –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è. –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏...")
        await self._cleanup()

    async def _cleanup(self) -> None:
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤."""
        # –û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –ø–µ—á–∞—Ç–∏
        for task in self.typing_tasks.values():
            task.cancel()
        self.typing_tasks.clear()

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º HTTP —Å–µ—Å—Å–∏—é
        await self.ai_handler.cleanup()

    async def on_message(self, message: discord.Message) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è)."""
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø–∏–Ω–≥–∏ –æ—Ç —Å–∞–º–æ–≥–æ —Å–µ–±—è
        if message.author == self.user:
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞
        if not self.user.mentioned_in(message):
            return

        channel_id = message.channel.id
        self.logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç {message.author} –≤ –∫–∞–Ω–∞–ª–µ {message.channel.name}")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é
        self.typing_tasks[channel_id] = asyncio.create_task(self._typing_indicator(message.channel))

        try:
            await message.add_reaction("‚è≥")
        except discord.Forbidden:
            self.logger.warning(f"–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π –≤ –∫–∞–Ω–∞–ª–µ {message.channel.name}")

        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
            history = await self.conversation_manager.get_formatted_history(message)

            # –ó–∞–ø—Ä–æ—Å –∫ LLM
            ai_response = await self.ai_handler.query_ai(history)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ —á–∞—Å—Ç—è–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            for chunk in self.utils.split_message(ai_response):
                await message.reply(chunk)

            await message.add_reaction("‚úÖ")

        except Exception as e:
            self.logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è")
            try:
                await message.add_reaction("‚ùå")
            except discord.Forbidden:
                pass
        finally:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
            if channel_id in self.typing_tasks:
                self.typing_tasks[channel_id].cancel()
                del self.typing_tasks[channel_id]

            # –£–¥–∞–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –æ–∂–∏–¥–∞–Ω–∏—è
            try:
                await message.remove_reaction("‚è≥", self.user)
            except (discord.Forbidden, discord.NotFound):
                pass

    async def _typing_indicator(self, channel: discord.abc.Messageable) -> None:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ –≤ –∫–∞–Ω–∞–ª–µ."""
        try:
            async with channel.typing():
                await asyncio.sleep(float('inf'))
        except asyncio.CancelledError:
            pass
        except discord.Forbidden:
            self.logger.warning(
                f"–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∏ –≤ –∫–∞–Ω–∞–ª–µ {getattr(channel, 'name', channel.id)}"
            )
        except Exception as e:
            self.logger.warning(f"–û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∏: {e}")

    async def _typing_for_interaction(self, interaction: discord.Interaction) -> None:
        """–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ –¥–ª—è slash –∫–æ–º–∞–Ω–¥."""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞–Ω–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω
            if not hasattr(interaction, 'channel') or not interaction.channel:
                return

            while True:
                try:
                    async with interaction.channel.typing():
                        await asyncio.sleep(8)  # Discord typing indicator –¥–ª–∏—Ç—Å—è ~10 —Å–µ–∫—É–Ω–¥
                except discord.Forbidden:
                    self.logger.warning(f"–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è typing –≤ –∫–∞–Ω–∞–ª–µ {interaction.channel}")
                    break
                except Exception:
                    # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –∂–¥–µ–º –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
                    await asyncio.sleep(1)
        except asyncio.CancelledError:
            pass
        except Exception as e:
            self.logger.warning(f"–û—à–∏–±–∫–∞ –≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–µ –ø–µ—á–∞—Ç–∏ –¥–ª—è interaction: {e}")

    def start_bot(self) -> None:
        """–û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞."""
        try:
            self.config.validate()
            self.logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            self.run(self.config.discord_token, log_handler=None)  # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ Discord
        except discord.LoginFailure:
            self.logger.critical("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω Discord")
        except ValueError as e:
            self.logger.critical(f"–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        except KeyboardInterrupt:
            self.logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
        except Exception as e:
            self.logger.critical("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞", exc_info=True)
        finally:
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
            asyncio.run(self._cleanup())


def main():
    """–ó–∞–ø—É—Å–∫ """
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_logging()
    logger = logging.getLogger("main")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞
    intents = discord.Intents.default()
    intents.message_content = True
    intents.messages = True
    intents.guilds = True

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    try:
        config = BotConfig()
        bot = DiscordLLMBot(config=config, intents=intents)
        logger.info("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        bot.start_bot()
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}", exc_info=True)
        return 1

    return 0


if __name__ == "__main__":
    exit(main())